#include <dt-bindings/zmk/matrix_transform.h>
#include "redsplit.dtsi"

/ {

  split_inputs {
      compatible = "zmk,split-inputs";
      input = <&glidepoint>;
  };

  default_kscan: kscan {
    compatible = "zmk,kscan-gpio-matrix";
    diode-direction = "col2row";

    row-gpios = 
                <&pro_micro 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                <&pro_micro 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;

    col-gpios = 
                <&pro_micro 20 (GPIO_ACTIVE_HIGH| GPIO_PULL_DOWN)>,
                <&pro_micro 19 (GPIO_ACTIVE_HIGH| GPIO_PULL_DOWN)>, 
                <&pro_micro 18 (GPIO_ACTIVE_HIGH| GPIO_PULL_DOWN)>,
                <&pro_micro 15 (GPIO_ACTIVE_HIGH| GPIO_PULL_DOWN)>,
                <&pro_micro 14 (GPIO_ACTIVE_HIGH| GPIO_PULL_DOWN)>,
                <&pro_micro 16 (GPIO_ACTIVE_HIGH| GPIO_PULL_DOWN)>;
  };
};

&default_transform {
  col-offset = <7>;
};

&i2c0 {
    status = "okay";

    glidepoint: glidepoint@2a {
        compatible = "cirque,pinnacle-i2c";
        reg = <0x2a>;
        status = "okay";
        dr-gpios = <&pro_micro 1 GPIO_ACTIVE_LOW>;
        absolute-mode;
    };
};

// &pinctrl {

//     i2c1_default: i2c1_default {
//         group1 {
//             psels = <NRF_PSEL(TWIM_SCL, 0, 17)>,
//                     <NRF_PSEL(TWIM_SDA, 0, 15)>;
//         };
//     };
// };

&pinctrl {
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 7)>,
                <NRF_PSEL(TWIM_SCL, 0, 17)>;
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 7)>,
                <NRF_PSEL(TWIM_SCL, 0, 17)>;
            low-power-enable;
        };
    };
};

&glidepoint_split {
    device = <&glidepoint>;

    // // Optional
    // input-processors = <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>;
};